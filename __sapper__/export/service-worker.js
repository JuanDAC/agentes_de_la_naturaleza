!function(){"use strict";const e=["/client/Button.1a69ff04.js","/client/index.8b6dca4a.js","/client/index.035faef4.js","/client/index.41414564.js","/client/Carousel.537d8bd2.js","/client/Tree.2365af5b.js","/client/index.df2a8b43.js","/client/index.f7393514.js","/client/index.3f1dde5a.js","/client/index.69c55a9a.js","/client/Trash.a59b4d0c.js","/client/RecycleOrdinary.cd66d3bd.js","/client/index.edaf2ca0.js","/client/client.9decb2cc.js"].concat(["/service-worker-index.html","/apple-touch-icon-180.png","/audio/home/0.mp3","/audio/home/1.mp3","/audio/home/2.mp3","/audio/home/3.mp3","/audio/home/4.mp3","/audio/home/5.mp3","/audio/home/6.mp3","/audio/home/7.mp3","/favicon.png","/img/backgrounds/background-starting-selector.jpg","/img/badges/badge-filtro-de-agua.png","/img/badges/nuevasEnerg_badges.png","/img/badges/reciclaje_badges.png","/img/badges/responsabilidad_badges.png","/img/buttons/btn-continuar.png","/img/buttons/btn-inicio.png","/img/buttons/btn-insignias.png","/img/buttons/opciones.png","/img/characters/character-1.png","/img/characters/character-2.png","/img/characters/character-3.png","/img/characters/character-4.png","/img/characters/character-transparent-1.png","/img/characters/character-transparent-2.png","/img/characters/character-transparent-3.png","/img/characters/character-transparent-4.png","/img/filter/filter-1.svg","/img/filter/filter-2.svg","/img/filter/filter-3.svg","/img/filter/filter-4.svg","/img/filter/filter-5.svg","/img/filter/filter-6.svg","/img/global/logo.png","/img/map/map.png","/img/map/park.png","/img/map/river.png","/img/map/school.png","/img/map/street.png","/img/park/park.png","/img/park/park_color.png","/img/river/river.png","/img/river/river_color.png","/img/school/reciclaje.png","/img/school/school.png","/img/school/school_color.png","/img/street/street.png","/img/street/street_color.png","/logo-192.png","/logo-512.png","/main.css","/manifest.json","/normalize.css"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1602719532643").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1602719532643"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const a=new URL(e.request.url);a.protocol.startsWith("http")&&(a.hostname===self.location.hostname&&a.port!==self.location.port||(a.host===self.location.host&&t.has(a.pathname)?caches.match(e.request).then(t=>{t&&e.respondWith(t)}):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1602719532643").then(async t=>{try{const a=await fetch(e.request);return t.put(e.request,a.clone()),a}catch(a){const n=await t.match(e.request);if(n)return n;throw a}}))))})}();
